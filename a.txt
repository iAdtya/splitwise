i am using supabase with drizzle user_id in expense is foreignKey

import {
  pgTable,
  serial,
  text,
  varchar,
  date,
  timestamp,
  foreignKey,
  integer,
  numeric,
} from "drizzle-orm/pg-core";
// Users schema

export const users = pgTable("users", {
  id: serial("id").primaryKey(),
  email: varchar("email", { length: 255 }).unique().notNull(),
  password: varchar("password", { length: 255 }).notNull(),
  default_currency: varchar("default_currency", { length: 10 }).notNull(),
});

export type InsertUser = typeof users.$inferInsert;
export type SelectUser = typeof users.$inferSelect;

export const expenses = pgTable("expenses", {
  id: serial("id").primaryKey(),
  name: varchar("name", { length: 255 }).notNull(),
  value: numeric("value", { precision: 10, scale: 2 }).notNull(),
  currency: varchar("currency", { length: 10 }).notNull(),
  members: text("members").array().notNull(),
  date: date("date").notNull(),
  user_id: integer("user_id")
    .notNull()
    .references(() => users.id),
});

export type InsertExpense = typeof expenses.$inferInsert;
export type SelectExpense = typeof expenses.$inferSelect;

### create endpoints for this User should be able to view, update and delete expenses ###


app.get("/expense/:user_id", async (req, res) => {
  try {
    const expenseId = parseInt(req.params.user_id, 10);
    const expensesList = await db.select().from(expenses).where(expenses.user_id.eq(expenseId));

    return res.json({ expenses: expensesList });
  } catch (error) {
    return res.status(400).json({ error: error.message });
  }
});   

### expenses table 

id,name,value,currency,members,date,user_id
2,Lunch,20.50,USD,"[""john.doe@example.com""]",2024-06-01,1                                                     

### User table

id,email,password,default_currency
1,adi@gmail.com,securePass@123,USD
5,adasd@gmail.com,sadasdasdasd,ruppes
7,adityad@gmail.com,sadasdasdasd,ruppes
9,aditya@gmail.com,sadasdasdasd,USD                    



[ 'aditya@example.com', 'adtyaaaa@gmail.com' ]